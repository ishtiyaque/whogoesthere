{"version":3,"sources":["Chat.js","utils.js","config.js","Card.js","NewEvent.js","NavBar.js","MyEvents.jsx","Invitations.js","SignIn.js","App.js","serviceWorker.js","index.js"],"names":["Chat","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSend","text","state","setState","document","getElementById","value","props","onSend","pollItems","beginsAt","until","title","description","participants","_this2","react_default","a","createElement","Dialog_default","open","onClose","handleClose","aria-labelledby","DialogTitle_default","id","DialogContent_default","comments","map","TextField_default","disabled","autoFocus","defaultValue","margin","fullWidth","style","paddingTop","width","paddingRight","onChange","e","target","onKeyPress","ev","console","log","concat","key","preventDefault","Button_default","onClick","color","verticalAlign","React","Component","withStyles","theme","button","spacing","unit","input","display","createNotification","status","arguments","length","undefined","message","NotificationManager","info","success","warning","error","baseUrl","Card","handleChange","name","event","defineProperty","respondToInvitation","axios","put","invitationId","params","invitation[response]","then","fetchInvitees","inviteUser","post","eventId","invitation[user_id]","invitee","get","_ref","data","invitations","users","newInvitations","invitation","objectSpread","user","find","_ref2","user_id","yes","filter","_ref3","response","no","_ref4","maybe","_ref5","deleteInvitation","delete","onExpandationChange","expanded","renderOptions","isFinal","className","classNames","classes","column","helper","variant","ThumbDown_default","rightIcon","SentimentSatisfied_default","ThumbUp_default","IconButton_default","openChat","aria-label","SmsOutlined_default","renderFinalCard","ExpansionPanelDetails_default","details","Typography_default","secondaryHeading","creator","label","type","startDate","substring","textField","InputLabelProps","shrink","endDate","_this$props","location","root","ExpansionPanel_default","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","heading","threshold","isString","summarizeIfLong","Divider_default","chipContainer","_ref6","Chip_default","avatar","index_es","chip","onDelete","ExpansionPanelActions_default","placeholder","size","marginBottom","justifyContent","flexWrap","fontSize","typography","pxToRem","palette","secondary","icon","height","alignItems","flexBasis","borderLeft","divider","padding","link","primary","main","textDecoration","&:hover","marginLeft","marginRight","FormDialog","deletePollItem","idx","splice","addPollItem","push","setVote","xrange","material_ui_pickers_esm","utils","DateFnsUtils","marginTop","d","DialogActions_default","createEvent","NavBar","normalizeEvent","_event$pollItems$","event[name]","event[description]","event[location]","event[start_time(1i)]","getFullYear","event[start_time(2i)]","getMonth","event[start_time(3i)]","getDate","event[start_time(4i)]","getHours","event[start_time(5i)]","getMinutes","event[end_time(1i)]","event[end_time(2i)]","event[end_time(3i)]","event[end_time(4i)]","event[end_time(5i)]","event[user_id]","userId","dialogOpen","finalEvent","onUpdate","customColor","react_router_dom","to","NewEvent","defaultProps","float","getContrastText","deepPurple","backgroundColor","MyEvents","getEvents","events","chatOpen","getComments","handleSendComment","comment[user_id]","comment[body]","body","closeDialog","pollItemId","_this$state","src_NavBar","src_Chat","window","innerHeight","overflow","src_Card","start_time","end_time","Invitations","newEvents","invitation_id","event_id","SignIn","App","position","top","left","react_router","path","src_Invitations","src_MyEvents","src_SignIn","lib","Boolean","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3a787b3.chunk.js","sourcesContent":["import React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport xrange from 'xrange';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { MuiPickersUtilsProvider, DateTimePicker } from 'material-ui-pickers';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n  button: {\n    margin: 2 * theme.spacing.unit,\n    verticalAlign: 'bottom',\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nclass Chat extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      pollItems: [{beginsAt: null, until: null}],\n      title: null,\n      description: null,\n      participants: null,\n    };\n  }\n  handleSend = () => {\n    const {text} = this.state;\n\n    this.setState({ text: null });\n    document.getElementById(\"chat-body\").value = \"\";\n    this.props.onSend(text);\n  };\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Comments</DialogTitle>\n        <DialogContent>\n          {(this.props.comments || []).map((text) => <TextField\n            disabled\n            autoFocus\n            defaultValue={text}\n            margin=\"dense\"\n            fullWidth\n          />)}\n          <TextField\n            id=\"chat-body\"\n            style={{ paddingTop: 20, width: '75%', paddingRight: 8 }}\n            onChange={e => this.setState({text: e.target.value})}\n            // onChange={this.handleChange('participants')}\n            autoFocus\n            margin=\"dense\"\n            onKeyPress={(ev) => {\n              console.log(`Pressed keyCode ${ev.key}`);\n              if (ev.key === 'Enter') {\n                this.handleSend();\n                ev.preventDefault();\n              }\n            }}\n          />\n          <Button onClick={this.handleSend} color=\"primary\" style={{ verticalAlign: 'bottom'}}>\n            Send!\n          </Button>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(styles)(Chat);\n","import {isString} from \"lodash\";\nimport {NotificationManager} from \"react-notifications\";\n\nexport const createNotification = (status = 'success', message = 'Done!') => {\n    switch (status) {\n        case 'info':\n            NotificationManager.info(message);\n            break;\n        case 'success':\n            NotificationManager.success(message);\n            break;\n        case 'warning':\n            NotificationManager.warning(message);\n            break;\n        case 'error':\n            NotificationManager.error(message);\n            break;\n    }\n};\nexport const summarizeIfLong = (text, threshold = 35) => {\n    return !isString(text) || text.length < threshold ? text : text.substring(0, threshold - 5) + '...';\n};\n","// export const baseUrl = 'http://localhost:3000';\nexport const baseUrl = 'http://wgt-optimal.c2y2jbcu8i.us-west-2.elasticbeanstalk.com';\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {withStyles} from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport DeleteIcon from '@material-ui/icons/ThumbDown';\nimport MaybeIcon from '@material-ui/icons/SentimentSatisfied';\nimport MessageIcon from '@material-ui/icons/SmsOutlined';\nimport Icon from '@material-ui/icons/ThumbUp';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport 'number-to-text/converters/en-us';\nimport {createNotification, summarizeIfLong} from \"./utils\";\nimport {Avatar} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport {baseUrl} from \"./config\";\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginBottom: theme.spacing.unit,\n  },\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit,\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    marginBottom: theme.spacing.unit,\n    width: 200,\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  rightIcon: {\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      invitee: null,\n      invitations: [],\n      yes: 0,\n      no: 0,\n      maybe: 0,\n    };\n  }\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n  respondToInvitation = message => {\n    axios.put(`${baseUrl}/invitations/${this.props.invitationId}`, null, { params: {\n      \"invitation[response]\": message,\n    }}).then(this.fetchInvitees);\n  };\n  inviteUser = () => {\n    axios.post(`${baseUrl}/events/${this.props.eventId}/invitations`, null, { params: {\n      \"invitation[user_id]\": this.state.invitee,\n    }}).then(() => {\n      this.setState({ invitee: null });\n      createNotification('success', 'User added');\n      this.fetchInvitees();\n    });\n  };\n  fetchInvitees = () => {\n    axios.get(`${baseUrl}/events/${this.props.eventId}/invitations`).then(({data}) => {\n      const { invitations, users } = data;\n      const newInvitations = invitations.map(invitation =>\n          ({ ...invitation, user: users.find(({id}) => id === invitation.user_id )}));\n      const yes = invitations.filter(({ response }) => response === 'yes').length;\n      const no = invitations.filter(({ response }) => response === 'no').length;\n      const maybe = invitations.filter(({ response }) => response === 'maybe').length;\n\n      this.setState({ invitations: newInvitations, yes, no, maybe });\n    });\n  };\n  deleteInvitation = id => {\n    axios.delete(`${baseUrl}/invitations/${id}`).then(() => {\n      const { invitations } = this.state;\n      this.setState({ invitations: invitations.filter(invitation => id !== invitation.id)});\n    });\n  };\n  onExpandationChange = (event, expanded) => {\n    if (expanded)\n      this.fetchInvitees();\n  };\n  renderOptions = (isFinal) => (\n    <div className={classNames(this.props.classes.column, this.props.classes.helper)}>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        className={this.props.classes.button}\n        onClick={() => this.respondToInvitation('no')}\n        disabled={isFinal}\n      >\n        {this.state.no}\n        <DeleteIcon className={this.props.classes.rightIcon} />\n      </Button>\n      <Button\n        variant=\"contained\"\n        className={this.props.classes.button}\n        onClick={() => this.respondToInvitation('maybe')}\n        disabled={isFinal}\n      >\n        {this.state.maybe}\n        <MaybeIcon className={this.props.classes.rightIcon} />\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={this.props.classes.button}\n        onClick={() => this.respondToInvitation('yes')}\n        disabled={isFinal}\n      >\n        {this.state.yes}\n        <Icon className={this.props.classes.rightIcon}>send</Icon>\n      </Button>\n      <IconButton onClick={() => this.props.openChat(this.props.eventId)} color=\"primary\" className={this.props.classes.button} aria-label=\"Add to shopping cart\">\n        <MessageIcon className={this.props.classes.rightIcon} />\n      </IconButton>\n    </div>\n  );\n  renderFinalCard = () => (\n    <ExpansionPanelDetails className={this.props.classes.details}>\n      <div className={this.props.classes.column}>\n        <Typography className={this.props.classes.secondaryHeading}>by {this.props.creator}</Typography>\n        <Typography className={this.props.classes.secondaryHeading}>{this.props.description}</Typography>\n      </div>\n      <div className={this.props.classes.column}>\n        <TextField\n          disabled\n          label=\"Begins at\"\n          type=\"datetime-local\"\n          defaultValue={this.props.startDate.substring(0, 16)}\n          className={this.props.classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        /><TextField\n          disabled\n          label=\"Until\"\n          type=\"datetime-local\"\n          defaultValue={this.props.endDate.substring(0, 16)}\n          className={this.props.classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n      </div>\n      {this.renderOptions(!this.props.invitationId)}\n    </ExpansionPanelDetails>\n  );\n  render() {\n    const { classes, location, title } = this.props;\n    const { invitations } = this.state;\n    return (\n      <div className={classes.root}>\n        <ExpansionPanel onChange={this.onExpandationChange}>\n          <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n            <div className={classes.column}>\n              <Typography className={classes.heading}>{title}</Typography>\n            </div>\n            <div className={classes.column}>\n              <Typography className={classes.secondaryHeading}>{summarizeIfLong(location)}</Typography>\n            </div>\n          </ExpansionPanelSummary>\n          {this.renderFinalCard()}\n          <Divider/>\n          <ExpansionPanel>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n              <Typography className={classes.secondaryHeading}>Invitees:</Typography>\n            </ExpansionPanelSummary>\n            <div className={classes.chipContainer}>\n              {invitations.map(({user, id}) =>\n                  (!!this.props.invitationId)?\n                  <Chip\n                      disabled={!!this.props.invitationId}\n                      avatar={<Avatar>{user.name[0] || '!'}</Avatar>}\n                      label={user.name}\n                      className={classes.chip}\n                  /> :\n                  <Chip\n                      disabled={!!this.props.invitationId}\n                      avatar={<Avatar>{user.name[0] || '!'}</Avatar>}\n                      label={user.name}\n                      onDelete={() => this.deleteInvitation(id)}\n                      className={classes.chip}\n                  />\n              )}\n            </div>\n            {!this.props.invitationId && <ExpansionPanelActions>\n              <TextField\n                  id=\"standard-name\"\n                  placeholder=\"User Id\"\n                  className={classes.textField}\n                  value={this.state.invitee}\n                  onChange={this.handleChange('invitee')}\n                  margin=\"normal\"\n              />\n              <Button onClick={this.inviteUser} size=\"small\" color=\"primary\">\n                invite\n              </Button>\n            </ExpansionPanelActions>}\n          </ExpansionPanel>\n        </ExpansionPanel>\n      </div>\n    );\n  }\n}\n\nCard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  setVote: PropTypes.func.isRequired,\n  invitationId: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(Card);\n","import React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport xrange from 'xrange';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport { withStyles } from '@material-ui/core/styles';\nimport { MuiPickersUtilsProvider, DateTimePicker } from 'material-ui-pickers';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n  button: {\n    margin: 2 * theme.spacing.unit,\n    verticalAlign: 'bottom',\n  },\n  input: {\n    display: 'none',\n  },\n});\n\nclass FormDialog extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      pollItems: [{beginsAt: null, until: null}],\n      title: null,\n      location: null,\n      description: null,\n      participants: null,\n    };\n  }\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n  deletePollItem = (idx) => {\n    const {pollItems} = this.state;\n    pollItems.splice(idx, 1);\n    this.setState({pollItems});\n  };\n  addPollItem = () => {\n    const {pollItems} = this.state;\n    pollItems.push({beginsAt: null, until: null});\n    this.setState({pollItems});\n  };\n  setVote = (beginsAt, until, idx) => {\n    const {pollItems} = this.state;\n    if (beginsAt)\n      pollItems[idx].beginsAt = beginsAt;\n    if (until)\n      pollItems[idx].until = until;\n    this.setState({pollItems});\n  };\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create Event</DialogTitle>\n        <DialogContent>\n          <TextField\n            onChange={this.handleChange('title')}\n            autoFocus\n            margin=\"dense\"\n            id=\"title\"\n            label=\"Title\"\n            type=\"title\"\n          />\n          <TextField\n              onChange={this.handleChange('location')}\n              style={{ marginLeft: 30 }}\n              autoFocus\n              margin=\"dense\"\n              id=\"location\"\n              label=\"Location\"\n              type=\"location\"\n          />\n          <TextField\n            onChange={this.handleChange('description')}\n            autoFocus\n            margin=\"dense\"\n            id=\"description\"\n            label=\"Description\"\n            type=\"description\"\n            fullWidth\n          />\n          {xrange(this.state.pollItems.length).map(idx =>\n            <MuiPickersUtilsProvider utils={DateFnsUtils} style={{ marginTop: 30 }} >\n              <DateTimePicker value={this.state.pollItems[idx].beginsAt} label=\"Begins at\" style={{ width: '33.33%', marginRight: 10, marginTop: 10 }} onChange={d => this.setVote(d, null, idx)} />\n              <DateTimePicker value={this.state.pollItems[idx].until} label=\"Until\" style={{ width: '33.33%', marginTop: 10 }} onChange={d => this.setVote(null, d, idx)} />\n              {/*<IconButton color=\"secondary\" className={this.props.classes.button} style={{ align: 'center' }} aria-label=\"Add an alarm\">*/}\n              {/*  {idx ? <DeleteOutlinedIcon onClick={() => this.deletePollItem(idx)}/>: <AddIcon onClick={() => this.addPollItem()}/>}*/}\n              {/*</IconButton>*/}\n            </MuiPickersUtilsProvider>\n          )}\n          {/*<TextField*/}\n          {/*  onChange={this.handleChange('participants')}*/}\n          {/*  autoFocus*/}\n          {/*  margin=\"dense\"*/}\n          {/*  id=\"participant\"*/}\n          {/*  label=\"Participants\"*/}\n          {/*  type=\"participants\"*/}\n          {/*  fullWidth*/}\n          {/*/>*/}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => this.props.createEvent(this.state)} color=\"primary\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default withStyles(styles)(FormDialog);\n","import React, { Component } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport NewEvent from \"./NewEvent\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport {withStyles} from \"@material-ui/core\";\nimport PropTypes from 'prop-types';\nimport axios from \"axios\";\nimport {baseUrl} from \"./config\";\nimport {createNotification} from \"./utils\";\nimport {Link} from \"react-router-dom\";\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing.unit,\n        float: 'right',\n    },\n    input: {\n        display: 'none',\n    },\n    customColor: {\n        color: theme.palette.getContrastText(deepPurple[ 400 ]),\n        backgroundColor: deepPurple[ 400 ],\n        '&:hover': {\n            backgroundColor: deepPurple[ 600 ],\n        },\n    }\n});\n\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dialogOpen: false,\n        }\n    }\n    normalizeEvent = event => {\n        const { beginsAt, until } = event.pollItems[0];\n        console.log(beginsAt, until);\n\n        return ({\n            'event[name]': event.title,\n            'event[description]': event.description,\n            'event[location]': event.location,\n            'event[start_time(1i)]': beginsAt.getFullYear(),\n            'event[start_time(2i)]': beginsAt.getMonth(),\n            'event[start_time(3i)]': beginsAt.getDate(),\n            'event[start_time(4i)]': beginsAt.getHours(),\n            'event[start_time(5i)]': beginsAt.getMinutes(),\n            'event[end_time(1i)]': until.getFullYear(),\n            'event[end_time(2i)]': until.getMonth(),\n            'event[end_time(3i)]': until.getDate(),\n            'event[end_time(4i)]': until.getHours(),\n            'event[end_time(5i)]': until.getMinutes(),\n            'event[user_id]': this.props.userId,\n        });\n    };\n    createEvent = event => {\n        this.setState({ dialogOpen: false });\n        console.log(event);\n        const finalEvent = this.normalizeEvent(event);\n        axios.post(`${baseUrl}/users/${this.props.userId}/events`, null,{\n            params: {\n                ...finalEvent\n            }\n        }).then(this.props.onUpdate).then(createNotification);\n    };\n    render() {\n        const { classes } = this.props;\n        const { dialogOpen } = this.state;\n\n        return (\n            <div style={{marginRight: 50}} >\n                <Button variant=\"contained\" color=\"primary\" className={[classes.button, classes.customColor]} onClick={() => this.setState({ dialogOpen: true })}>\n                    Create\n                </Button>\n                <Button variant=\"contained\" color=\"primary\" className={[classes.button, classes.customColor]}>\n                    Logout\n                </Button>\n                <Link to='/invitations' >\n                    <Button variant=\"contained\" color=\"primary\" className={[classes.button, classes.customColor]}>\n                        Invitations\n                    </Button>\n                </Link>\n                <Link to='/' >\n                    <Button variant=\"contained\" color=\"primary\" className={[classes.button, classes.customColor]}>\n                        My Events\n                    </Button>\n                </Link>\n                <NewEvent\n                    open={dialogOpen}\n                    handleClose={() => this.setState({ dialogOpen: false })}\n                    createEvent={this.createEvent}\n                />\n            </div>\n        );\n    }\n}\n\nNavBar.propTypes = {\n    onUpdate: PropTypes.func,\n    userId: PropTypes.number.isRequired,\n};\n\nNavBar.defaultProps = {\n    onUpdate: null,\n};\n\nexport default withStyles(styles)(NavBar);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport axios from 'axios';\nimport 'react-notifications/lib/notifications.css';\nimport PropTypes from \"prop-types\";\nimport Chat from './Chat';\nimport Card from './Card';\nimport {baseUrl} from './config';\nimport NavBar from \"./NavBar\";\nimport {createNotification} from \"./utils\";\n\nconst styles = theme => ({\n});\n\nclass MyEvents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pollItemId: null,\n      chatOpen: false,\n      events: [],\n      comments: [],\n    };\n  }\n\n  getEvents = () => {\n    axios.get(`${baseUrl}/users/${this.props.userId}/events`, ).then(({data: events}) => {\n      console.log(events);\n      this.setState({ events });\n    });\n  };\n\n  openChat = (eventId) => {\n    this.setState({ chatOpen: true, eventId }, () => this.getComments(eventId));\n  };\n\n  handleSendComment = (text) => {\n    axios.post(`${baseUrl}/events/${this.state.eventId}/comments`, null, { params: {\n      \"comment[user_id]\": this.props.userId,\n      \"comment[body]\": text,\n    }}).then(this.getComments).then(createNotification);\n  };\n\n  getComments = () => {\n    axios.get(`${baseUrl}/events/${this.state.eventId}/comments`)\n        .then(({data}) => {\n          const { comments, users } = data;\n\n          this.setState({ comments: comments.map(({ body, user_id }) =>\n                `${users.find(({ id }) => id === user_id).name}: ${body}`) })\n        });\n  };\n\n  componentDidMount() {\n    this.getEvents();\n  }\n  closeDialog = () => {\n    this.setState({ chatOpen: false });\n  };\n  render() {\n    const { chatOpen, events } = this.state;\n    const { userId } = this.props;\n\n    return (\n      <div>\n        <NavBar onUpdate={this.getEvents} userId={userId} />\n        <Chat open={chatOpen} handleClose={this.closeDialog} onSend={this.handleSendComment} comments={this.state.comments} />\n        <div style={{ paddingTop: 100, marginRight: 100, marginLeft: 100, marginBottom: 100, height: window.innerHeight }} >\n          <div style={{ width: '100%', height: '100%', overflow: 'scroll' }}>\n            {events.map(e =>\n              <Card\n                openChat={this.openChat}\n                startDate={e.start_time}\n                endDate={e.end_time}\n                eventId={e.id}\n                creator={this.props.userId}\n                title={e.name}\n                location={e.location}\n                description={e.description}\n                invitationId={null}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMyEvents.propTypes = {\n  userId: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(MyEvents);\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport axios from 'axios';\nimport 'react-notifications/lib/notifications.css';\nimport PropTypes from \"prop-types\";\nimport Chat from './Chat';\nimport Card from './Card';\nimport {baseUrl} from './config';\nimport NavBar from \"./NavBar\";\nimport {createNotification} from \"./utils\";\n\nconst styles = theme => ({\n});\n\nclass Invitations extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            pollItemId: null,\n            chatOpen: false,\n            events: [],\n            comments: [],\n        };\n    }\n\n    getEvents = () => {\n        axios.get(`${baseUrl}/users/${this.props.userId}/invitations`, ).then(({data}) => {\n            console.log(data);\n            const newEvents = data.events.map(event => ({\n                ...event,\n                invitation_id: data.invitations.find(({ event_id}) => event.id === event_id).id\n            }));\n            this.setState({ events: newEvents });\n        });\n    };\n\n    openChat = (eventId) => {\n        this.setState({ chatOpen: true, eventId }, () => this.getComments(eventId));\n    };\n\n    handleSendComment = (text) => {\n        axios.post(`${baseUrl}/events/${this.state.eventId}/comments`, null, { params: {\n            \"comment[user_id]\": this.props.userId,\n            \"comment[body]\": text,\n        }}).then(this.getComments).then(createNotification);\n    };\n\n    getComments = () => {\n        axios.get(`${baseUrl}/events/${this.state.eventId}/comments`)\n            .then(({data}) => {\n                const { comments, users } = data;\n\n                this.setState({ comments: comments.map(({ body, user_id }) =>\n                        `${users.find(({ id }) => id === user_id).name}: ${body}`) })\n            });\n    };\n\n    componentDidMount() {\n        this.getEvents();\n    }\n    closeDialog = () => {\n        this.setState({ chatOpen: false });\n    };\n    render() {\n        const { chatOpen, events } = this.state;\n        const { userId } = this.props;\n\n        return (\n            <div>\n                <NavBar onUpdate={this.getEvents} userId={userId} />\n                <Chat open={chatOpen} handleClose={this.closeDialog} onSend={this.handleSendComment} comments={this.state.comments} />\n                <div style={{ paddingTop: 100, marginRight: 100, marginLeft: 100, marginBottom: 100, height: window.innerHeight }} >\n                    <div style={{ width: '100%', height: '100%', overflow: 'scroll' }}>\n                        {events.map(e =>\n                            <Card\n                                openChat={this.openChat}\n                                startDate={e.start_time}\n                                endDate={e.end_time}\n                                eventId={e.id}\n                                creator={e.user_id}\n                                title={e.name}\n                                location={e.location}\n                                description={e.description}\n                                invitationId={e.invitation_id}\n                            />\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInvitations.propTypes = {\n    userId: PropTypes.number.isRequired,\n};\n\nexport default withStyles(styles)(Invitations);\n","import React from 'react';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport xrange from 'xrange';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport AddIcon from '@material-ui/icons/AddCircleOutline';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport { MuiPickersUtilsProvider, DateTimePicker } from 'material-ui-pickers';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n    button: {\n        margin: 2 * theme.spacing.unit,\n        verticalAlign: 'bottom',\n    },\n    input: {\n        display: 'none',\n    },\n});\n\nclass SignIn extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            pollItems: [{beginsAt: null, until: null}],\n            title: null,\n            description: null,\n            participants: null,\n        };\n    }\n    handleSend = () => {\n        const {text} = this.state;\n\n        this.setState({ text: null });\n        document.getElementById(\"userId\").value = \"\";\n        this.props.onSend(text);\n    };\n    render() {\n        return (\n            <Dialog\n                open\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">SignIn</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        id=\"userId\"\n                        style={{ paddingTop: 20, width: '68%', paddingRight: 24 }}\n                        onChange={e => this.setState({text: e.target.value})}\n                        // onChange={this.handleChange('participants')}\n                        autoFocus\n                        type=\"number\"\n                        margin=\"dense\"\n                        onKeyPress={(ev) => {\n                            console.log(`Pressed keyCode ${ev.key}`);\n                            if (ev.key === 'Enter') {\n                                this.handleSend();\n                                ev.preventDefault();\n                            }\n                        }}\n                    />\n                    <Button onClick={this.handleSend} color=\"primary\" style={{ verticalAlign: 'bottom' }}>\n                        Login\n                    </Button>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nexport default withStyles(styles)(SignIn);\n","import React, {Component} from 'react';\nimport Dashboard from './MyEvents';\nimport {BrowserRouter as Router, Route, Switch,} from \"react-router-dom\";\nimport {NotificationContainer} from \"react-notifications\";\nimport Invitations from \"./Invitations\";\nimport SignIn from \"./SignIn\";\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n          userId: null,\n      };\n  }\n\n  render() {\n    const { userId } = this.state;\n    return (\n          <div style={{ position: 'fixed', top: 0, left: 0}}>\n            <div style={{ position: 'fixed', top: 0, left: 0, width: '100%'}}>\n                {\n                    userId ?\n                        <Router>\n                            <Switch>\n                                <Route path=\"/invitations\">\n                                    <Invitations userId={userId} />\n                                </Route>\n                                <Route path=\"/my-events\">\n                                    <Dashboard userId={userId} />\n                                </Route>\n                                <Route path=\"/my-events\">\n                                    <Dashboard userId={userId} />\n                                </Route>\n                                <Route path=\"/sign-up\">\n                                    <Dashboard userId={userId} />\n                                </Route>\n                                <Route path=\"/\">\n                                    <Dashboard userId={userId} />\n                                </Route>\n                            </Switch>\n                        </Router> :\n                        <SignIn onSend={userId => this.setState({ userId })} />\n                }\n            </div>\n            <NotificationContainer />\n          </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('main'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}